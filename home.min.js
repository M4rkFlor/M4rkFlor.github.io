const scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);camera.position.z=12;const renderer=new THREE.WebGLRenderer;renderer.setSize(window.innerWidth,window.innerHeight),renderer.setPixelRatio(devicePixelRatio);const raycaster=new THREE.Raycaster;document.body.appendChild(renderer.domElement);const directionalLight=new THREE.PointLight(16777215,.5);directionalLight.position.set(0,5,10),scene.add(directionalLight);const ambientlight=new THREE.AmbientLight(16777215,.5);function handleMouse(){raycaster.setFromCamera(mouse,camera);const e=raycaster.intersectObject(plane);if(e.length>0){const{color:t}=e[0].object.geometry.attributes;previousFace!=e[0].face.a&&(t.setXYZ(e[0].face.a,.5,.5,.5),t.setXYZ(e[0].face.b,.5,.5,.5),t.setXYZ(e[0].face.c,.5,.5,.5),e[0].object.geometry.attributes.color.needsUpdate=!0,fadeVertextColorQ.has(e[0].face.a)||fadeVertextColorQ.add(e[0].face.a),fadeVertextColorQ.has(e[0].face.b)||fadeVertextColorQ.add(e[0].face.b),fadeVertextColorQ.has(e[0].face.c)||fadeVertextColorQ.add(e[0].face.c),previousFace=e[0].face.a)}}function updatePlane(){vertPos=plane.geometry.attributes.position.array,indices=plane.geometry.attributes.position.count;for(let e=0;e<indices;e++)index=3*e,vertPos[index]=initalPositions[index]+.1*Math.sin(frame/360*Math.PI*2+initalPositions[index]),vertPos[index+1]=initalPositions[index+1]+.1*Math.cos(frame/360*Math.PI*2+initalPositions[index+1]),vertPos[index+2]=initalPositions[index+2]+.1*Math.cos(frame/360*Math.PI*2+initalPositions[index+2]);for(let e of fadeVertextColorQ){let t=plane.geometry.attributes.color.getX(e)-.01;t<=.01001?(plane.geometry.attributes.color.setXYZ(e,0,0,0),fadeVertextColorQ.delete(e)):plane.geometry.attributes.color.setXYZ(e,t,t,t)}plane.geometry.attributes.position.needsUpdate=!0,plane.geometry.attributes.color.needsUpdate=!0}function makePlane(e,t,n,i){let a=new THREE.PlaneGeometry(e,t,n,i);vertPos=a.attributes.position.array,indices=a.attributes.position.count;for(let e=0;e<indices;e++)index=3*e,vertPos[index]+=(Math.random()-.5)/1.2,vertPos[index+1]+=(Math.random()-.5)/1.2,vertPos[index+2]+=(Math.random()-.5)/1.2;initalPositions=[...vertPos];const o=[];for(let e=0;e<a.attributes.position.count;e++)o.push(0,0,0);a.setAttribute("color",new THREE.Float32BufferAttribute(o,3));const r=new THREE.MeshPhongMaterial({wireframe:!1,vertexColors:!0,flatShading:THREE.FlatShading});let s=new THREE.Mesh(a,r);return scene.add(s),s}scene.add(ambientlight);const mouse={x:void 0,y:void 0};let initalPositions,plane=makePlane(75, 50, 150, 100),frame=0,previousFace=null;const fadeVertextColorQ=new Set,clock=new THREE.Clock;let totalTime=0;function animate(){requestAnimationFrame(animate),totalTime=clock.getElapsedTime(),handleMouse(),updatePlane(),plane.position.y=.2*Math.sin(totalTime),360==(frame+=1)&&(frame=0),renderer.render(scene,camera)}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight),renderer.setPixelRatio(devicePixelRatio)}function handleClassChange(){}animate(),addEventListener("mousemove",e=>{mouse.x=e.clientX/innerWidth*2-1,mouse.y=-e.clientY/innerHeight*2+1}),window.addEventListener("resize",onWindowResize,!1),el=document.getElementById("Projects"),el.addEventListener("click",handleClassChange);